
# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-text-editor.vim-mode.insert-mode':
  'k j': 'vim-mode:activate-normal-mode'

'atom-text-editor.vim-mode.normal-mode':
  ', w': 'core:save'

'atom-text-editor':
  '=': 'editor:auto-indent'
  # disable arrow keys
  'left': "core:nop"
  'right': "core:nop"
  'up': "core:nop"
  'down': "core:nop"

'.platform-darwin atom-text-editor[data-grammar~="clojure"].vim-mode.visual-mode':
  'enter': 'lisp-paredit:newline'
  '=': 'lisp-paredit:indent'